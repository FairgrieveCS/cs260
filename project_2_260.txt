Jonathan Fairgrieve
CS 260
Project 2 Design

1.) Based on what we know about linked lists, stacks, and queues, design a queue data structure:
    
	Functions:
	- Enqueue or add(x): Adds an element to the end of the queue            
	- Dequeue or remove(): Removes an element from the front of the queue     
	- Peek: Returns the element at the front of the queue without removing it
	- isEmpty: Returns a boolean indicating if the queue is empty
	- Size: Returns the number of elements in the queue
	
	Values: 
	- The front of the queue
	- The end of the queue
	- The number of elements in the queue

2.) Based on what we know about linked lists, design a list data structure that allows us to add
	(insert) or remove (delete) values at a given location in the list (instead of the top of a stack or
	the front or back of a queue):
	
	Functions:
	- Insert: Inserts an element at a given position in the list
	- Delete: Removes an element at a given position in the list
	- Size: Returns the number of elements in the list
	- isEmpty: Returns a boolean indicating if the list is empty
	- Find: Returns the position of an element in the list
	- Get: Returns the element at a given position in the list
	
	Values
	- The number of elements in the list
	- The position of elements in the list
	- The elements in the list